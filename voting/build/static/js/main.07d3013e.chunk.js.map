{"version":3,"sources":["Voting.js","languageList.js","App.js","reportWebVitals.js","index.js"],"names":["Voting","props","incrementCount","setState","count","state","className","this","languageName","onClick","Component","languageList","id","name","App","map","language","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAwBeA,E,kDApBd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IAMPC,eAAiB,kBAAM,EAAKC,SAAS,CAACC,MAAO,EAAKC,MAAMD,MAAM,KAL7D,EAAKC,MAAQ,CACZD,MAAO,GAHS,E,0CASlB,WACC,OACC,sBAAKE,UAAU,WAAf,UACC,qBAAKA,UAAU,YAAf,SAA4BC,KAAKF,MAAMD,QACvC,8BAAMG,KAAKN,MAAMO,eACjB,wBAAQC,QAASF,KAAKL,eAAtB,yB,GAfiBQ,aCONC,EAVM,CACjB,CAACC,GAAI,EAAGC,KAAM,cACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,MACd,CAACD,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,cACd,CAACD,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,WCSHC,MAXf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,qDACA,qBAAKA,UAAU,YAAf,SACGK,EAAaI,KAAI,SAAAC,GAAQ,OAAI,cAAC,EAAD,CAAQR,aAAcQ,EAASH,MAAWG,EAASJ,aCE1EK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.07d3013e.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\n\nclass Voting extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcount: 0\n\t\t}\n\t}\n\n\tincrementCount = () => this.setState({count: this.state.count+1});\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"language\">\n\t\t\t\t<div className=\"voteCount\">{this.state.count}</div>\n\t\t\t\t<div>{this.props.languageName}</div>\n\t\t\t\t<button onClick={this.incrementCount}>Vote</button>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Voting;","const languageList = [\n    {id: 1, name: \"Javascript\"},\n    {id: 2, name: \"Python\"},\n    {id: 3, name: \"Go\"},\n    {id: 4, name: \"Java\"},\n    {id: 5, name: \"Typescript\"},\n    {id: 6, name: \"Ruby\"},\n    {id: 7, name: \"Elixir\"}\n]\n\nexport default languageList;","import './App.css';\nimport Voting from './Voting'\nimport languageList from './languageList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Vote for a language</h1>\n      <div className=\"languages\">\n        {languageList.map(language => <Voting languageName={language.name} key={language.id}/>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}